var searchIndex = JSON.parse('{\
"rustomic":{"doc":"","t":"AAAAAAIDLLLLLKLLLLNDNENNNELLLMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMLLLMNDEDNALLLLLLAALLLLLLLLLLAMLLLLLLLLLLMDLMLLLLLLLLLLLLLLLLLDLMLLLLMLLLLLLLLLMLLLDLLLLLLLLLENNNNENNNINENNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLRRRRRRRRRRRRAADENNNNNNELLLLLLLMLLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLMMLFNIELLKLLLAKKLLLDLLLLLLLLLLLDNENNNNDNNNDEDMMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLMLLMALLLLLLLLLLLLMMLLLLLLMLDLLLLLLLLL","n":["clock","datom","query","schema","storage","tx","Clock","MockClock","borrow","borrow_mut","from","into","new","now","now","try_from","try_into","type_id","Added","Datom","I64","Op","Retracted","Str","U64","Value","add","as_str","as_u64","attribute","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","entity","eq","eq","eq","fmt","fmt","fmt","from","from","from","hash","hash","hash","into","into","into","matches_type","op","partial_cmp","retract","str","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","tx","type_id","type_id","type_id","value","Error","Query","QueryError","QueryResult","StorageError","assignment","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clause","db","fmt","fmt","fmt","from","from","from","into","into","into","new","pattern","results","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wher","wher","Assignment","assign","assigned","assigned_value","borrow","borrow_mut","clone","clone_into","eq","fmt","from","from_query","into","is_complete","new","to_owned","try_from","try_into","type_id","update_with","Clause","assign","attribute","borrow","borrow_mut","clone","clone_into","entity","fmt","free_variables","from","into","new","to_owned","try_from","try_into","type_id","value","with_attribute","with_entity","with_value","Db","borrow","borrow_mut","from","into","new","query","try_from","try_into","type_id","AttributePattern","Blank","Blank","Blank","Constant","EntityPattern","Id","Id","Ident","Pattern","Range","ValuePattern","Variable","Variable","Variable","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","constant","eq","eq","eq","fmt","fmt","fmt","from","from","from","ident","into","into","into","range","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","variable","variable","variable","variable_name","variable_name","variable_name","variable_name","DB_ATTR_CARDINALITY_ID","DB_ATTR_CARDINALITY_IDENT","DB_ATTR_DOC_ID","DB_ATTR_DOC_IDENT","DB_ATTR_IDENT_ID","DB_ATTR_IDENT_IDENT","DB_ATTR_TYPE_ID","DB_ATTR_TYPE_IDENT","DB_ATTR_UNIQUE_ID","DB_ATTR_UNIQUE_IDENT","DB_TX_TIME_ID","DB_TX_TIME_IDENT","attribute","default","Attribute","Cardinality","I64","Many","One","Ref","Str","U64","ValueType","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","cardinality","clone","clone","clone_into","clone_into","doc","eq","eq","fmt","fmt","fmt","from","from","from","from","from","ident","into","into","into","new","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unique","unique","value_type","with_doc","default_datoms","IdentNotFound","Storage","StorageError","borrow","borrow_mut","find_datoms","fmt","from","into","memory","resolve_ident","save","try_from","try_into","type_id","InMemoryStorage","borrow","borrow_mut","find_datoms","from","into","new","resolve_ident","save","try_from","try_into","type_id","AttributeValue","DuplicateTempId","Entity","Error","Id","InvalidAttributeType","New","Operation","StorageError","TempId","TempIdNotFound","Transaction","TransactionError","TransctionResult","attribute","attributes","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","entity","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","new","new","on_id","on_new","on_temp_id","operations","set","set_mut","temp_ids","transactor","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","tx_data","tx_id","type_id","type_id","type_id","type_id","type_id","type_id","value","with","Transactor","borrow","borrow_mut","from","into","new","transact","try_from","try_into","type_id"],"q":[[0,"rustomic"],[6,"rustomic::clock"],[18,"rustomic::datom"],[78,"rustomic::query"],[115,"rustomic::query::assignment"],[135,"rustomic::query::clause"],[156,"rustomic::query::db"],[166,"rustomic::query::pattern"],[227,"rustomic::schema"],[241,"rustomic::schema::attribute"],[293,"rustomic::schema::default"],[294,"rustomic::storage"],[309,"rustomic::storage::memory"],[321,"rustomic::tx"],[396,"rustomic::tx::transactor"]],"d":["","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","",""],"i":[0,0,0,0,0,0,0,0,1,1,1,1,1,42,1,1,1,1,10,0,5,0,10,5,5,0,7,5,5,7,5,10,7,5,10,7,5,10,7,5,10,7,5,7,5,10,7,5,10,7,5,10,7,5,10,7,5,10,7,5,7,5,7,5,5,10,7,5,10,7,5,10,7,7,5,10,7,7,19,0,0,0,19,0,17,18,19,17,18,19,0,0,17,18,19,17,18,19,17,18,19,17,0,18,17,18,19,17,18,19,17,18,19,17,17,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,31,31,31,31,31,31,31,31,31,0,26,25,27,27,0,26,25,25,0,27,0,26,25,27,26,25,27,26,25,27,26,25,27,26,25,27,27,26,25,27,26,25,27,26,25,27,25,26,25,27,27,26,25,27,26,25,27,26,25,27,26,25,27,26,25,27,22,26,25,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,35,35,16,16,16,0,16,35,33,16,35,33,33,33,16,35,16,35,33,16,35,16,35,33,16,16,35,35,33,33,16,35,33,33,16,35,16,35,33,16,35,33,16,35,33,33,33,33,33,0,36,0,0,36,36,28,36,36,36,0,28,28,36,36,36,0,37,37,37,37,37,37,37,37,37,37,37,0,39,0,39,40,39,40,0,39,40,39,0,0,0,44,34,40,44,34,41,38,39,40,44,34,41,38,39,34,38,39,40,44,34,41,38,39,40,44,34,41,38,39,34,41,34,34,34,41,34,34,38,0,40,44,34,41,38,39,40,44,34,41,38,39,38,38,40,44,34,41,38,39,44,41,0,43,43,43,43,43,43,43,43,43],"f":[0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],1],[[],2],[1,2],[[],3],[[],3],[[],4],0,0,0,0,0,0,0,0,[[2,2,[6,[5]],2],7],[5,[[9,[8]]]],[5,[[9,[2]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[5,5],[10,10],[7,7],[[]],[[]],[[]],[[5,5],11],0,[[5,5],12],[[10,10],12],[[7,7],12],[[5,13],14],[[10,13],14],[[7,13],14],[[]],[[]],[[]],[[5,15]],[[10,15]],[[7,15]],[[]],[[]],[[]],[[5,16],12],0,[[5,5],[[9,[11]]]],[[2,2,[6,[5]],2],7],[8,5],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,[[],4],[[],4],[[],4],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[17,13],14],[[18,13],14],[[19,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[],4],[[17,20],17],0,0,[[21,8,[6,[5]]]],0,[[21,22],[[9,[5]]]],[[]],[[]],[21,21],[[]],[[21,21],12],[[21,13],14],[[]],[17,21],[[]],[21,12],[[[23,[8]]],21],[[]],[[],3],[[],3],[[],4],[[21,20,7],21],0,[[20,21],20],0,[[]],[[]],[20,20],[[]],0,[[20,13],14],[20,[[24,[8]]]],[[]],[[]],[[],20],[[]],[[],3],[[],3],[[],4],0,[[20,25],20],[[20,26],20],[[20,27],20],0,[[]],[[]],[[]],[[]],[[[30,[[29,[28]]]],2],[[31,[28]]]],[[[31,[28]],17],[[3,[18,19]]]],[[],3],[[],3],[[],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[26,26],[25,25],[27,27],[[]],[[]],[[]],[5,27],[[26,26],12],[[25,25],12],[[27,27],12],[[26,13],14],[[25,13],14],[[27,13],14],[[]],[[]],[[]],[8,25],[[]],[[]],[[]],[[[32,[5]]],27],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[],4],[8,26],[8,25],[8,27],[[],[[9,[8]]]],[26,[[9,[8]]]],[25,[[9,[8]]]],[27,[[9,[8]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[33,34],0,[16,16],[35,35],[[]],[[]],0,[[16,16],12],[[35,35],12],[[16,13],14],[[35,13],14],[[33,13],14],[[]],[2,[[9,[16]]]],[2,[[9,[35]]]],[[]],[[]],0,[[]],[[]],[[]],[[8,16,35],33],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[],4],[33,33],0,0,[[33,8],33],[[],[[24,[7]]]],0,0,0,[[]],[[]],[[20,2],[[3,[[24,[7]],36]]]],[[36,13],14],[[]],[[]],0,[8,[[3,[2,36]]]],[[[24,[7]]],[[3,[36]]]],[[],3],[[],3],[[],4],0,[[]],[[]],[[37,20,2],[[3,[[24,[7]],36]]]],[[]],[[]],[[],37],[[37,8],[[3,[2,36]]]],[[37,[24,[7]]],[[3,[36]]]],[[],3],[[],3],[[],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[38,13],14],[[39,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[40,34],[[],41],[2,34],[[],34],[8,34],0,[[34,8,[6,[5]]],34],[[34,8,[6,[5]]]],0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,[[41,34],41],0,[[]],[[]],[[]],[[]],[[[30,[[29,[28]]]],42],[[43,[28,42]]]],[[[43,[28,42]],41],[[3,[38,39]]]],[[],3],[[],3],[[],4]],"c":[],"p":[[3,"MockClock"],[15,"u64"],[4,"Result"],[3,"TypeId"],[4,"Value"],[8,"Into"],[3,"Datom"],[15,"str"],[4,"Option"],[4,"Op"],[4,"Ordering"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"Hasher"],[4,"ValueType"],[3,"Query"],[3,"QueryResult"],[4,"QueryError"],[3,"Clause"],[3,"Assignment"],[8,"Pattern"],[3,"HashSet"],[3,"Vec"],[4,"AttributePattern"],[4,"EntityPattern"],[4,"ValuePattern"],[8,"Storage"],[3,"RwLock"],[3,"Arc"],[3,"Db"],[8,"RangeBounds"],[3,"Attribute"],[3,"Operation"],[4,"Cardinality"],[4,"StorageError"],[3,"InMemoryStorage"],[3,"TransctionResult"],[4,"TransactionError"],[4,"Entity"],[3,"Transaction"],[8,"Clock"],[3,"Transactor"],[3,"AttributeValue"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
