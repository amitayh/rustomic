var searchIndex = new Map(JSON.parse('[\
["rustomic",{"doc":"","t":"CCCCCCKFFNNNNNNNNNNMNNNNNNNPFPPGPPPPGNNNNONNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNONNNONNPKIIPPPPGPPPPIFGIPIPKPCNNNNNNCONNNNMNNCNNONNNNNNNNNNNNCNOCMNNMNNNNNNNNNNNNNNNFNONNNNNNNNNNNNNNNNFONNNNNONNNNNNNNONONNNNFNNNNNNNNNGPPPPGPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNSSSSSSSSSSSSCCFFGPPFPPPPPGNNNNNNNNNNONNNNNNNNNNOONNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONHPRRPRKFGKOCNNNNNNNNCOMNNNNNNNCNMCNNNNNNNONNONNNNFPGPNNNNNNNNNNNNNNNNNNNNNNNNPFGFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNIPPGFPKNNNNCNNNNNNCNNNMNNNNNNNNMHCHHHSSSHHFGPFPPPPPGPIPPPPFGFPOONNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNONNNONCNNNNNNNNNNNNNNOONNNNNNNONFNNNNNNNNNN","n":["clock","datom","query","schema","storage","tx","Clock","Instant","MockClock","borrow","borrow","borrow_mut","borrow_mut","default","from","from","into","into","new","now","now","try_from","try_from","try_into","try_into","type_id","type_id","Added","Datom","Decimal","I64","Op","Ref","Retracted","Str","U64","Value","add","arbitrary","arbitrary","arbitrary","attribute","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","entity","eq","eq","eq","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","into","into","into","op","partial_cmp","retract","size","size","str","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","tx","type_id","type_id","type_id","value","write","write","Aggregate","Aggregator","Assignment","AssignmentResult","Err","Err","Err","Error","Find","InvalidFindVariable","Ok","Ok","Ok","Predicate","Query","QueryError","QueryResult","ResolveError","Result","StorageError","ToAggregator","Variable","assignment","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clause","clauses","clone","clone","clone_into","clone_into","consume","count","count_distinct","db","default","find","find","fmt","fmt","from","from","from","from","from","from","into","into","into","new","pattern","pred","predicates","resolver","result","source","sum","to_aggregator","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","value_pred","variable","with","PartialAssignment","assign","assigned","borrow","borrow_mut","clone","clone_into","eq","fmt","from","from_clauses","into","is_complete","new","to_owned","try_from","try_into","type_id","update_with","Clause","attribute","borrow","borrow_mut","clone","clone_into","default","entity","fmt","free_variables","from","into","new","to_owned","try_from","try_into","tx","type_id","value","with_attribute","with_entity","with_tx","with_value","Db","borrow","borrow_mut","from","into","new","query","try_from","try_into","type_id","AttributeIdentifier","Blank","Constant","Id","Ident","Pattern","Variable","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","eq","eq","fmt","fmt","from","from","id","ident","into","into","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","value","variable","Resolver","borrow","borrow_mut","from","into","into_iter","new","next","try_from","try_into","type_id","DB_ATTR_CARDINALITY_ID","DB_ATTR_CARDINALITY_IDENT","DB_ATTR_DOC_ID","DB_ATTR_DOC_IDENT","DB_ATTR_IDENT_ID","DB_ATTR_IDENT_IDENT","DB_ATTR_TYPE_ID","DB_ATTR_TYPE_IDENT","DB_ATTR_UNIQUE_ID","DB_ATTR_UNIQUE_IDENT","DB_TX_TIME_ID","DB_TX_TIME_IDENT","attribute","default","Attribute","AttributeDefinition","Cardinality","Decimal","I64","InvalidTag","Many","One","Ref","Str","U64","ValueType","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cardinality","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","definition","doc","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","id","ident","into","into","into","into","into","many","new","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique","value_type","version","with_doc","default_datoms","AtMost","Error","Error","Exact","Iter","ReadStorage","Restricts","TxRestrict","WriteStorage","attribute","attribute_resolver","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","disk","entity","find","fmt","fmt","from","from","from","into","into","memory","new","save","serde","test","to_owned","to_owned","try_from","try_from","try_into","try_into","tx","type_id","type_id","value","with_attribute","with_entity","with_tx","with_value","AttributeResolver","IdentNotFound","ResolveError","StorageError","borrow","borrow","borrow_mut","borrow_mut","default","eq","fmt","fmt","from","from","from","from","into","into","new","resolve","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","DbError","DiskStorage","DiskStorageError","DiskStorageIter","ReadError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","find","fmt","fmt","from","from","from","from","from","into","into","into","into_iter","new","next","save","source","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","InMemoryStorage","InMemoryStorageIter","borrow","borrow","borrow_mut","borrow_mut","default","find","from","from","into","into","into_iter","new","next","save","try_from","try_from","try_into","try_into","type_id","type_id","Bytes","EndOfInput","InvalidInput","ReadError","Reader","Utf8Error","Writable","borrow","borrow","borrow_mut","borrow_mut","datom","eq","fmt","fmt","from","from","from","index","into","into","new","size","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","write","deserialize","serialize","aevt","avet","eavt","TAG_AEVT","TAG_AVET","TAG_EAVT","key_range","seek_key","AttributeOperation","AttributeValue","DuplicateTempId","EntityOperation","Err","Id","InvalidAttributeType","New","Ok","OperatedEntity","ResolveError","Result","StorageError","TempId","TempId","TempIdNotFound","Transaction","TransactionError","TransctionResult","Value","attribute","attributes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","entity","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","new","new","on_id","on_new","on_temp_id","operations","set_reference","set_value","source","temp_ids","to_string","transactor","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx_data","tx_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","with","Transactor","borrow","borrow_mut","default","from","into","new","transact","try_from","try_into","type_id"],"q":[[0,"rustomic"],[6,"rustomic::clock"],[27,"rustomic::datom"],[100,"rustomic::query"],[177,"rustomic::query::assignment"],[196,"rustomic::query::clause"],[219,"rustomic::query::db"],[229,"rustomic::query::pattern"],[265,"rustomic::query::resolver"],[276,"rustomic::schema"],[290,"rustomic::schema::attribute"],[377,"rustomic::schema::default"],[378,"rustomic::storage"],[426,"rustomic::storage::attribute_resolver"],[454,"rustomic::storage::disk"],[491,"rustomic::storage::memory"],[513,"rustomic::storage::serde"],[545,"rustomic::storage::serde::datom"],[547,"rustomic::storage::serde::datom::serialize"],[550,"rustomic::storage::serde::index"],[555,"rustomic::tx"],[651,"rustomic::tx::transactor"],[662,"core::result"],[663,"core::any"],[664,"core::convert"],[665,"quickcheck::arbitrary"],[666,"core::cmp"],[667,"core::fmt"],[668,"core::fmt"],[669,"alloc::rc"],[670,"core::hash"],[671,"core::option"],[672,"core::fmt"],[673,"core::error"],[674,"alloc::boxed"],[675,"alloc::string"],[676,"std::collections::hash::set"],[677,"alloc::vec"],[678,"core::iter::traits::iterator"],[679,"core::clone"],[680,"core::cmp"],[681,"rocksdb::db"],[682,"core::str::error"],[683,"core::ops::range"]],"d":["","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains the error value","Contains the error value","Contains the error value","","","","Contains the success value","Contains the success value","Contains the success value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator that yields all <em>non-retracted</em> datoms …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Contains the error value","","","","Contains the success value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","",""],"i":[0,0,0,0,0,0,0,0,0,86,1,86,1,1,86,1,86,1,1,2,1,86,1,86,1,86,1,10,0,7,7,0,7,10,7,7,0,6,7,10,6,6,7,10,6,7,10,6,7,10,6,7,10,6,7,6,7,10,6,7,10,6,7,7,7,7,7,7,7,7,10,6,7,10,6,7,10,6,6,7,6,7,10,7,7,10,6,7,10,6,7,10,6,6,7,10,6,6,7,10,26,0,0,0,51,88,49,30,0,30,51,88,49,0,0,0,0,30,0,30,0,26,0,26,27,30,26,27,30,0,27,26,27,26,27,28,26,26,0,27,27,27,30,30,26,27,30,30,30,30,26,27,30,27,0,27,27,0,28,30,26,37,26,27,30,26,27,30,26,27,30,26,27,30,27,26,27,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,47,47,47,47,47,47,47,47,47,0,46,46,45,45,0,46,46,45,46,45,46,45,46,45,46,46,45,46,45,46,45,46,46,46,45,46,45,46,45,46,45,46,45,46,46,0,55,55,55,55,55,55,55,55,55,55,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,56,0,57,57,56,56,56,0,56,57,58,59,60,56,57,58,59,60,59,56,57,58,59,60,56,57,58,59,60,58,59,56,57,58,59,60,56,57,58,59,60,56,56,57,58,59,60,58,59,56,57,58,59,60,59,59,56,57,58,59,60,56,56,57,57,58,59,60,56,57,58,59,60,56,57,58,59,60,59,59,59,58,59,0,62,52,65,62,52,0,0,0,0,61,0,61,62,61,62,61,62,61,62,0,61,52,61,62,61,61,62,61,62,0,61,65,0,61,61,62,61,62,61,62,61,61,62,61,61,61,61,61,0,32,0,32,66,32,66,32,66,32,32,32,66,32,32,32,66,32,66,66,32,32,66,32,66,32,66,32,68,0,0,0,68,67,72,68,67,72,68,67,68,68,67,72,68,68,68,67,72,68,72,67,72,67,68,68,67,72,68,67,72,68,67,72,68,0,0,74,73,74,73,73,73,74,73,74,73,74,73,74,73,74,73,74,73,74,73,0,70,70,0,0,70,0,77,70,77,70,0,70,70,70,77,70,70,0,77,70,77,78,70,70,77,70,77,70,77,70,78,0,0,0,0,0,0,0,0,0,0,0,0,82,0,87,84,82,84,87,0,82,0,82,84,89,82,0,0,0,89,90,83,84,89,90,83,80,81,82,84,89,90,83,80,81,82,80,83,81,82,82,84,89,90,83,83,80,81,82,82,82,82,84,89,90,83,80,81,82,83,80,83,83,83,80,83,83,82,81,82,0,84,89,90,83,80,81,82,84,89,90,83,80,81,82,81,81,84,89,90,83,80,81,82,90,80,0,85,85,85,85,85,85,85,85,85,85],"f":[0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[2,3],[1,3],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],0,0,0,0,0,0,0,0,0,0,[[3,3,-1,3],6,[[8,[7]]]],[9,7],[9,10],[9,6],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[7,7],[10,10],[6,6],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[7,7],12],0,[[7,7],13],[[10,10],13],[[6,6],13],[[7,14],15],[[10,14],15],[[6,14],15],[16,7],[-1,-1,[]],[17,7],[18,7],[[[19,[17]]],7],[20,7],[21,7],[3,7],[-1,-1,[]],[-1,-1,[]],[[7,-1],11,22],[[10,-1],11,22],[[6,-1],11,22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[7,7],[[23,[12]]]],[[3,3,-1,3],6,[[8,[7]]]],[7,24],[10,24],[17,7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],0,[-1,5,[]],[-1,5,[]],[-1,5,[]],0,[[7,25],11],[[10,25],11],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[26,26],[27,27],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[28,29],11],[[],26],[17,26],0,[[],27],[[27,26],27],0,[[[30,[-1]],14],15,31],[[[30,[-1]],14],15,[]],[-1,-1,[]],[-1,-1,[]],[[[32,[-1]]],[[30,[-1]]],[]],[-1,[[30,[-1]]],[]],[-1,-1,[]],[33,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],27],0,[[27,-1],27,[[35,[29],[[34,[13]]]]]],0,0,[28,7],[[[30,[-1]]],[[23,[36]]],36],[17,26],[37,[[38,[28]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,39,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[[27,17,-1],27,[[35,[7],[[34,[13]]]]]],[17,26],[[27,40],27],0,[[41,17,7],11],0,[-1,-2,[],[]],[-1,-2,[],[]],[41,41],[[-1,-2],11,[],[]],[[41,41],13],[[41,14],15],[-1,-1,[]],[[[42,[40]]],41],[-1,-2,[],[]],[41,13],[[[43,[[19,[17]]]]],41],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[[41,40,6],41],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[40,40],[[-1,-2],11,[],[]],[[],40],0,[[40,14],15],[40,[[44,[[19,[17]]]]]],[-1,-1,[]],[-1,-2,[],[]],[[],40],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],0,[-1,5,[]],0,[[40,[46,[45]]],40],[[40,[46,[3]]],40],[[40,[46,[3]]],40],[[40,[46,[7]]],40],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[3,47],[[47,-1,27],[[51,[[0,[[50,[],[[48,[49]]]]]]]]],52],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[46,[-1]]],[[46,[-1]]],53],[45,45],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[],[[46,[-1]]],[]],[[[46,[-1]],[46,[-1]]],13,54],[[45,45],13],[[[46,[-1]],14],15,31],[[45,14],15],[-1,-1,[]],[-1,-1,[]],[3,[[46,[45]]]],[17,[[46,[45]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],[-1,[[46,[7]]],[[8,[7]]]],[17,[[46,[-1]]],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[44,[40]],3],[[55,[-1]]],52],[[[55,[-1]]],[[23,[-2]]],52,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[56,56],[57,57],[58,58],[59,59],[60,60],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],0,0,[[56,56],13],[[57,57],13],[[58,58],13],[[59,59],13],[[60,60],13],[[56,14],15],[[57,14],15],[[58,14],15],[[59,14],15],[[60,14],15],[-1,-1,[]],[7,56],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[59,59],[[17,56],59],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,[[4,[56,-1]]],[]],[-1,[[4,[-2]]],[],[]],[3,[[4,[57,-1]]],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[59,59],0,0,0,[[59,17],59],[[],[[44,[6]]]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[61,61],[62,62],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],0,0,[[[52,[],[[63,[-1]],[64,[-2]]]],61],-2,36,[[50,[],[[48,[[4,[6,-1]]]]]]]],[[61,14],15],[[62,14],15],[[40,29,3],61],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[3,61],[[[65,[],[[63,[-1]]]],[42,[6]]],[[4,[11,-1]]],36],0,[[61,6],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],0,[-1,5,[]],[-1,5,[]],0,[[61,3],61],[[61,3],61],[[61,3],61],[[61,7],61],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],66],[[[32,[-1]],[32,[-1]]],13,54],[[[32,[-1]],14],15,31],[[[32,[-1]],14],15,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[32,[-1]]],[]],[33,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],66],[[66,-1,[19,[17]],3],[[4,[58,32]]],52],[[[32,[-1]]],[[23,[36]]],36],[-1,39,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[67,61],-1,[]],[[68,14],15],[[68,14],15],[-1,-1,[]],[-1,-1,[]],[69,68],[-1,-1,[]],[70,68],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[71,67],[72,[[23,[-1]]],[]],[[67,[42,[6]]],[[4,[11,-1]]],[]],[68,[[23,[36]]]],[-1,39,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],73],[[73,61],-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],73],[74,[[23,[-1]]],[]],[[73,[42,[6]]],[[4,[11,-1]]],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[70,70],13],[[70,14],15],[[70,14],15],[-1,-1,[]],[-1,-1,[]],[75,70],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[42,[76]]],77],[78,24],[70,[[23,[36]]]],[-1,39,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],[[78,25],11],[[[42,[76]]],[[4,[6,70]]]],0,[6,25],[6,25],[6,25],0,0,0,[61,[[79,[25]]]],[[7,[42,[76]],3],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],80],0,[[81,14],15],[[[82,[-1]],14],15,31],[[[82,[-1]],14],15,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[59,83],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[32,[-1]]],[[82,[-1]]],[]],[-1,-1,[]],[-1,[[82,[-1]]],[]],[33,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[84,83],[[],80],[3,83],[[],83],[17,83],0,[[83,17,17],83],[[83,17,-1],83,[[8,[7]]]],[[[82,[-1]]],[[23,[36]]],36],0,[-1,39,[]],0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],0,0,[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],0,[[80,-1],80,[[8,[83]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[],85],[-1,-1,[]],[-1,-2,[],[]],[[],85],[[85,-1,86,80],[[87,[81]]],52],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]]],"c":[],"p":[[5,"MockClock",6],[10,"Clock",6],[1,"u64"],[6,"Result",662],[5,"TypeId",663],[5,"Datom",27],[6,"Value",27],[10,"Into",664],[5,"Gen",665],[6,"Op",27],[1,"tuple"],[6,"Ordering",666],[1,"bool"],[5,"Formatter",667],[8,"Result",667],[1,"u32"],[1,"str"],[5,"Decimal",668],[5,"Rc",669],[1,"i32"],[1,"i64"],[10,"Hasher",670],[6,"Option",671],[1,"usize"],[8,"Bytes",513],[6,"Find",100],[5,"Query",100],[10,"Aggregator",100],[8,"Assignment",100],[6,"QueryError",100],[10,"Debug",667],[6,"ResolveError",426],[1,"never"],[17,"Output"],[10,"Fn",672],[10,"Error",673],[10,"ToAggregator",100],[5,"Box",674],[5,"String",675],[5,"Clause",196],[5,"PartialAssignment",177],[1,"slice"],[5,"HashSet",676],[5,"Vec",677],[6,"AttributeIdentifier",229],[6,"Pattern",229],[5,"Db",219],[17,"Item"],[8,"QueryResult",100],[10,"Iterator",678],[8,"Result",100],[10,"ReadStorage",378],[10,"Clone",679],[10,"PartialEq",666],[5,"Resolver",265],[6,"ValueType",290],[6,"Cardinality",290],[5,"Attribute",290],[5,"AttributeDefinition",290],[5,"InvalidTag",290],[5,"Restricts",378],[6,"TxRestrict",378],[17,"Error"],[17,"Iter"],[10,"WriteStorage",378],[5,"AttributeResolver",426],[5,"DiskStorage",454],[6,"DiskStorageError",454],[5,"Error",680],[6,"ReadError",513],[8,"DB",681],[5,"DiskStorageIter",454],[5,"InMemoryStorage",491],[5,"InMemoryStorageIter",491],[5,"Utf8Error",682],[1,"u8"],[5,"Reader",513],[10,"Writable",513],[5,"Range",683],[5,"Transaction",555],[5,"TransctionResult",555],[6,"TransactionError",555],[5,"EntityOperation",555],[6,"OperatedEntity",555],[5,"Transactor",651],[5,"Instant",6],[8,"Result",555],[8,"AssignmentResult",100],[6,"AttributeValue",555],[5,"AttributeOperation",555]],"b":[[62,"impl-From%3Cu32%3E-for-Value"],[64,"impl-From%3C%26str%3E-for-Value"],[65,"impl-From%3CDecimal%3E-for-Value"],[66,"impl-From%3CRc%3Cstr%3E%3E-for-Value"],[67,"impl-From%3Ci32%3E-for-Value"],[68,"impl-From%3Ci64%3E-for-Value"],[69,"impl-From%3Cu64%3E-for-Value"],[142,"impl-Debug-for-QueryError%3CS%3E"],[143,"impl-Display-for-QueryError%3CS%3E"],[146,"impl-From%3CResolveError%3CS%3E%3E-for-QueryError%3CS%3E"],[147,"impl-From%3CS%3E-for-QueryError%3CS%3E"],[436,"impl-Debug-for-ResolveError%3CS%3E"],[437,"impl-Display-for-ResolveError%3CS%3E"],[466,"impl-Display-for-DiskStorageError"],[467,"impl-Debug-for-DiskStorageError"],[470,"impl-From%3CError%3E-for-DiskStorageError"],[472,"impl-From%3CReadError%3E-for-DiskStorageError"],[526,"impl-Debug-for-ReadError"],[527,"impl-Display-for-ReadError"],[594,"impl-Debug-for-TransactionError%3CS%3E"],[595,"impl-Display-for-TransactionError%3CS%3E"],[603,"impl-From%3CResolveError%3CS%3E%3E-for-TransactionError%3CS%3E"],[605,"impl-From%3CS%3E-for-TransactionError%3CS%3E"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
