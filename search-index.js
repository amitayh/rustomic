var searchIndex = JSON.parse('{\
"rustomic":{"doc":"","t":"AAAAAAIDDLLLLLLLLLLKLLLLLLLNDNNENNNELLLLLLLMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLMLLLMLLNNDEDNALLLLLLAALLLLLLLLLLLLLALMMLLLLLLLLLLLLLLMDMLLLLLLLLLLLLLLLLLLDMLLLLLLMLLLLLLLLMLMLLLLDLLLLLLLLLENNNNENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRRRRRRRRRRRRAADENNDNNNNNELLLLLLLLMLLLLMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMMLFQQQIDIMALLLAMKLLLALKALLMLMLLLLDDLLLLMLLLLLLLMMLLLLLLLLLLLMNDEDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLGNNEDNILLLLALLLLLALLLKLLLLLLLLKFAFFFRRRFFDNENNNNDNNNDEDMMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMLLMLALLLLLLLLLLLLMMLLLLLLMLDLLLLLLLLLL","n":["clock","datom","query","schema","storage","tx","Clock","Instant","MockClock","borrow","borrow","borrow_mut","borrow_mut","default","from","from","into","into","new","now","now","try_from","try_from","try_into","try_into","type_id","type_id","Added","Datom","Decimal","I64","Op","Retracted","Str","U64","Value","add","arbitrary","arbitrary","arbitrary","as_i64","as_str","as_u64","attribute","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","entity","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","into","into","into","matches_type","op","partial_cmp","retract","size","size","str","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","tx","type_id","type_id","type_id","value","write","write","Error","IdentNotFound","Query","QueryError","QueryResult","StorageError","assignment","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clause","db","default","fmt","fmt","fmt","from","from","from","from","from","into","into","into","new","pattern","pred","predicates","results","source","test","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","value_pred","wher","wher","Assignment","assigned","assigned_value","borrow","borrow_mut","clone","clone_into","eq","equivalent","fmt","from","from_query","into","is_complete","new","to_owned","try_from","try_into","type_id","update_with","DataPattern","attribute","bind","borrow","borrow_mut","clone","clone_into","default","entity","fmt","free_variables","from","into","new","to_owned","try_from","try_into","tx","type_id","value","with_attribute","with_entity","with_tx","with_value","Db","borrow","borrow_mut","from","into","new","query","try_from","try_into","type_id","AttributeIdentifier","Blank","Constant","Id","Ident","Pattern","Variable","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","eq","eq","equivalent","equivalent","fmt","fmt","from","from","id","ident","into","into","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","value","variable","DB_ATTR_CARDINALITY_ID","DB_ATTR_CARDINALITY_IDENT","DB_ATTR_DOC_ID","DB_ATTR_DOC_IDENT","DB_ATTR_IDENT_ID","DB_ATTR_IDENT_IDENT","DB_ATTR_TYPE_ID","DB_ATTR_TYPE_IDENT","DB_ATTR_UNIQUE_ID","DB_ATTR_UNIQUE_IDENT","DB_TX_TIME_ID","DB_TX_TIME_IDENT","attribute","default","Attribute","Cardinality","Decimal","I64","InvalidValue","Many","One","Ref","Str","U64","ValueType","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cardinality","clone","clone","clone_into","clone_into","doc","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","ident","into","into","into","into","many","new","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unique","unique","value_type","with_doc","default_datoms","Error","Error","Iter","ReadStorage","Restricts","WriteStorage","attribute","attribute_resolver","borrow","borrow_mut","default","disk","entity","find","from","from","into","memory","new","save","serde","try_from","try_into","tx","type_id","value","with_attribute","with_entity","with_tx","with_value","Attribute","AttributeResolver","borrow","borrow","borrow_mut","borrow_mut","cardinality","clone","clone_into","default","eq","fmt","from","from","id","ident","into","into","new","resolve","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","value_type","DbError","DiskStorage","DiskStorageError","DiskStorageIter","ReadError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","find","fmt","fmt","from","from","from","from","from","into","into","into","into_iter","new","next","save","source","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","InMemoryStorage","InMemoryStorageIter","borrow","borrow","borrow_mut","borrow_mut","default","find","from","from","into","into","into_iter","new","next","save","try_from","try_from","try_into","try_into","type_id","type_id","Bytes","EndOfInput","InvalidInput","ReadError","Reader","Utf8Error","Writable","borrow","borrow","borrow_mut","borrow_mut","datom","fmt","fmt","from","from","from","index","into","into","new","size","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","write","deserialize","serialize","aevt","avet","eavt","TAG_AEVT","TAG_AVET","TAG_EAVT","key_range","seek_key","AttributeValue","DuplicateTempId","Entity","Id","IdentNotFound","InvalidAttributeType","New","Operation","StorageError","TempId","TempIdNotFound","Transaction","TransactionError","TransctionResult","attribute","attributes","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","entity","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","new","new","on_id","on_new","on_temp_id","operations","set","source","temp_ids","to_string","transactor","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","tx_data","tx_id","type_id","type_id","type_id","type_id","type_id","type_id","value","with","Transactor","borrow","borrow_mut","default","from","into","new","transact","try_from","try_into","type_id"],"q":[[0,"rustomic"],[6,"rustomic::clock"],[27,"rustomic::datom"],[106,"rustomic::query"],[153,"rustomic::query::assignment"],[173,"rustomic::query::clause"],[197,"rustomic::query::db"],[207,"rustomic::query::pattern"],[245,"rustomic::schema"],[259,"rustomic::schema::attribute"],[323,"rustomic::schema::default"],[324,"rustomic::storage"],[354,"rustomic::storage::attribute_resolver"],[382,"rustomic::storage::disk"],[419,"rustomic::storage::memory"],[441,"rustomic::storage::serde"],[472,"rustomic::storage::serde::datom"],[474,"rustomic::storage::serde::datom::serialize"],[477,"rustomic::storage::serde::index"],[482,"rustomic::tx"],[563,"rustomic::tx::transactor"]],"d":["","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator that yields all <em>non-retracted</em> datoms â€¦","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","",""],"i":[0,0,0,0,0,0,0,0,0,67,1,67,1,1,67,1,67,1,1,68,1,67,1,67,1,67,1,9,0,5,5,0,9,5,5,0,7,5,9,7,5,5,5,7,5,9,7,5,9,7,5,9,7,5,9,7,5,7,5,9,7,5,9,7,5,9,7,5,5,5,5,5,5,5,5,9,7,5,9,7,5,9,7,5,7,5,7,5,9,5,5,9,7,5,9,7,5,9,7,7,5,9,7,7,5,9,28,28,0,0,0,28,0,25,26,28,25,26,28,0,0,25,26,28,28,25,26,28,28,28,25,26,28,25,0,25,25,26,28,25,28,25,26,28,25,26,28,25,26,28,25,25,25,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,0,40,40,40,40,40,40,40,40,40,0,36,36,39,39,0,36,36,39,36,39,36,39,36,39,36,36,39,36,39,36,39,36,39,36,36,36,39,36,39,36,39,36,39,36,39,36,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,0,44,44,22,22,22,0,69,22,44,45,69,22,44,45,45,22,44,22,44,45,22,44,22,44,22,44,45,69,22,22,44,44,45,45,69,22,44,45,45,45,22,44,69,22,22,44,45,69,22,44,45,69,22,44,45,45,45,45,45,0,41,70,41,0,0,0,46,0,46,46,46,0,46,41,46,46,46,0,46,70,0,46,46,46,46,46,46,46,46,46,0,0,49,48,49,48,48,48,48,49,48,48,49,48,48,48,49,48,49,49,48,49,48,49,48,49,48,48,51,0,0,0,51,50,55,51,50,55,51,50,51,51,50,55,51,51,51,50,55,51,55,50,55,50,51,51,50,55,51,50,55,51,50,55,51,0,0,57,56,57,56,56,56,57,56,57,56,57,56,57,56,57,56,57,56,57,56,0,53,53,0,0,53,0,60,53,60,53,0,53,53,60,53,53,0,60,53,60,71,53,53,60,53,60,53,60,53,71,0,0,0,0,0,0,0,0,0,0,0,63,0,65,63,63,65,0,63,65,63,0,0,0,72,64,65,72,64,61,62,63,65,72,64,61,62,63,61,64,62,63,63,65,72,64,64,61,62,63,63,63,65,72,64,61,62,63,64,61,64,64,64,61,64,63,62,63,0,65,72,64,61,62,63,65,72,64,61,62,63,62,62,65,72,64,61,62,63,72,61,0,66,66,66,66,66,66,66,66,66,66],"f":[0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],1],[[]],[[]],[[]],[[]],[[],1],[[],2],[1,2],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],0,0,0,0,0,0,0,0,0,[[2,2,[6,[5]],2],7],[8,5],[8,9],[8,7],[5,[[11,[10]]]],[5,[[11,[12]]]],[5,[[11,[2]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[5,5],[9,9],[7,7],[[]],[[]],[[]],[[5,5],13],0,[[5,5],14],[[9,9],14],[[7,7],14],[[],14],[[],14],[[],14],[[5,15],16],[[9,15],16],[[7,15],16],[[]],[17,5],[10,5],[18,5],[2,5],[19,5],[12,5],[[[20,[12]]],5],[[]],[[]],[[5,21]],[[9,21]],[[7,21]],[[]],[[]],[[]],[[5,22],14],0,[[5,5],[[11,[13]]]],[[2,2,[6,[5]],2],7],[5,23],[9,23],[12,5],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,[[],4],[[],4],[[],4],0,[[5,24]],[[9,24]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],25],[[26,15],16],[[[28,[27]],15],16],[[28,15],16],[[]],[[]],[[],28],[[]],[29],[[]],[[]],[[]],[[],25],0,[[25,30],25],0,0,[[[28,[31]]],[[11,[31]]]],[[25,[32,[[20,[12]],5]]],14],[[],33],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[],4],[[25,12,30],25],[[25,34],25],0,0,0,[[35,36],[[11,[5]]]],[[]],[[]],[35,35],[[]],[[35,35],14],[[],14],[[35,15],16],[[]],[25,35],[[]],[35,14],[[[37,[[20,[12]]]]],35],[[]],[[],3],[[],3],[[],4],[[35,34,7],35],0,0,[[34,35],34],[[]],[[]],[34,34],[[]],[[],34],0,[[34,15],16],[34,[[38,[[20,[12]]]]]],[[]],[[]],[[],34],[[]],[[],3],[[],3],0,[[],4],0,[[34,[36,[39]]],34],[[34,[36,[2]]],34],[[34,[36,[2]]],34],[[34,[36,[5]]],34],0,[[]],[[]],[[]],[[]],[2,40],[[40,41,25],[[3,[26,28]]]],[[],3],[[],3],[[],4],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[[36,[42]]],[[36,[42]]]],[39,39],[[]],[[]],[[],36],[[[36,[43]],[36,[43]]],14],[[39,39],14],[[],14],[[],14],[[[36,[27]],15],16],[[39,15],16],[[]],[[]],[2,[[36,[39]]]],[12,[[36,[39]]]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[[6,[5]]],[[36,[5]]]],[12,36],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[22,22],[44,44],[[]],[[]],0,[[22,22],14],[[44,44],14],[[],14],[[],14],[[22,15],16],[[44,15],16],[[45,15],16],[[]],[[]],[2,[[11,[22]]]],[[]],[2,[[11,[44]]]],[[]],0,[[]],[[]],[[]],[[]],[45,45],[[12,22],45],[[]],[[]],[[],3],[2,[[3,[22]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[],4],[[],4],[45,45],0,0,[[45,12],45],[[],[[38,[7]]]],0,0,0,0,0,0,0,0,[[]],[[]],[[],46],0,0,[46],[[]],[34,46],[[]],0,[[],46],[[[47,[7]]],3],0,[[],3],[[],3],0,[[],4],0,[[46,2],46],[[46,2],46],[[46,2],46],[[46,5],46],0,0,[[]],[[]],[[]],[[]],0,[48,48],[[]],[[],49],[[48,48],14],[[48,15],16],[[]],[[]],0,0,[[]],[[]],[[],49],[[49,41,12],[[3,[[11,[48]]]]]],[[]],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[50,46]],[[51,15],16],[[51,15],16],[[]],[[]],[52,51],[[]],[53,51],[[]],[[]],[[]],[[]],[54,50],[55,11],[[50,[47,[7]]],3],[51,[[11,[31]]]],[[],33],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[],4],0,0,[[]],[[]],[[]],[[]],[[],56],[[56,46]],[[]],[[]],[[]],[[]],[[]],[[],56],[57,11],[[56,[47,[7]]],3],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,[[53,15],16],[[53,15],16],[[]],[58,53],[[]],0,[[]],[[]],[[[47,[59]]],60],[[],23],[53,[[11,[31]]]],[[],33],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[24],[[[47,[59]]],[[3,[7,53]]]],0,[7,24],[7,24],[7,24],0,0,0,[46],[[7,[47,[59]]],24],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],61],0,[[62,15],16],[[63,15],16],[[[63,[27]],15],16],[[]],[[]],[45,64],[[]],[[]],[[]],[[]],[29],[[],63],[[]],[[]],[[]],[[]],[[]],[[]],[65,64],[[],61],[2,64],[[],64],[12,64],0,[[64,12,[6,[5]]],64],[[[63,[31]]],[[11,[31]]]],0,[[],33],0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,[[61,[6,[64]]],61],0,[[]],[[]],[[],66],[[]],[[]],[[],66],[[66,41,67,61],[[3,[62,63]]]],[[],3],[[],3],[[],4]],"c":[],"p":[[3,"MockClock"],[15,"u64"],[4,"Result"],[3,"TypeId"],[4,"Value"],[8,"Into"],[3,"Datom"],[3,"Gen"],[4,"Op"],[15,"i64"],[4,"Option"],[15,"str"],[4,"Ordering"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Decimal"],[15,"i32"],[15,"u32"],[3,"Rc"],[8,"Hasher"],[4,"ValueType"],[15,"usize"],[6,"Bytes"],[3,"Query"],[3,"QueryResult"],[8,"Debug"],[4,"QueryError"],[15,"never"],[8,"Fn"],[8,"Error"],[3,"HashMap"],[3,"String"],[3,"DataPattern"],[3,"Assignment"],[4,"Pattern"],[3,"HashSet"],[3,"Vec"],[4,"AttributeIdentifier"],[3,"Db"],[8,"ReadStorage"],[8,"Clone"],[8,"PartialEq"],[4,"Cardinality"],[3,"Attribute"],[3,"Restricts"],[15,"slice"],[3,"Attribute"],[3,"AttributeResolver"],[3,"DiskStorage"],[4,"DiskStorageError"],[3,"Error"],[4,"ReadError"],[6,"DB"],[3,"DiskStorageIter"],[3,"InMemoryStorage"],[3,"InMemoryStorageIter"],[3,"Utf8Error"],[15,"u8"],[3,"Reader"],[3,"Transaction"],[3,"TransctionResult"],[4,"TransactionError"],[3,"Operation"],[4,"Entity"],[3,"Transactor"],[3,"Instant"],[8,"Clock"],[3,"InvalidValue"],[8,"WriteStorage"],[8,"Writable"],[3,"AttributeValue"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
