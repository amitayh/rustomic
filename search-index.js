var searchIndex = JSON.parse('{\
"rustomic":{"doc":"","t":"AAAAAAIDDLLLLLLLLLLKLLLLLLLNDNNENNNELLLLLLLMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLMLLLMLLNNDEDNALLLLLLAALLLLLLLLLLLLLLAMLLLLLLLLLLLLMDLMLLLLLLLLLLLLLLLLLLDLMLLLLLMLLLLLLLLMLMLLLLLDLLLLLLLLLENNNNENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRRRRRRRRRRRRAADENNDNNNNNELLLLLLLLMLLLLMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMMLFQQQIDIMALLLAMKLLLALKALLMLMLLLLDDLLLLMLLLLLLLMMLLLLLLLLLLLMNDEDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLGNNEDNILLLLALLLLLALLLKLLLLLLLLKFAFFFRRRFFDNENNNNDNNNDEDMMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMLLMLALLLLLLLLLLLLMMLLLLLLMLDLLLLLLLLLL","n":["clock","datom","query","schema","storage","tx","Clock","Instant","MockClock","borrow","borrow","borrow_mut","borrow_mut","default","from","from","into","into","new","now","now","try_from","try_from","try_into","try_into","type_id","type_id","Added","Datom","Decimal","I64","Op","Retracted","Str","U64","Value","add","arbitrary","arbitrary","arbitrary","as_str","as_string","as_u64","attribute","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","entity","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","into","into","into","matches_type","op","partial_cmp","retract","size","size","str","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","tx","type_id","type_id","type_id","value","write","write","Error","IdentNotFound","Query","QueryError","QueryResult","StorageError","assignment","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clause","db","default","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","new","pattern","results","source","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wher","wher","Assignment","assign","assigned","assigned_value","borrow","borrow_mut","clone","clone_into","eq","equivalent","fmt","from","from_query","into","is_complete","new","to_owned","try_from","try_into","type_id","update_with","Clause","assign","attribute","borrow","borrow_mut","clone","clone_into","default","entity","fmt","free_variables","from","into","new","to_owned","try_from","try_into","tx","type_id","value","with_attribute","with_entity","with_tx","with_tx2","with_value","Db","borrow","borrow_mut","from","into","new","query","try_from","try_into","type_id","AttributeIdentifier","Blank","Constant","Id","Ident","Pattern","Variable","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","eq","eq","equivalent","equivalent","fmt","fmt","from","from","id","ident","into","into","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","value","variable","variable_name","DB_ATTR_CARDINALITY_ID","DB_ATTR_CARDINALITY_IDENT","DB_ATTR_DOC_ID","DB_ATTR_DOC_IDENT","DB_ATTR_IDENT_ID","DB_ATTR_IDENT_IDENT","DB_ATTR_TYPE_ID","DB_ATTR_TYPE_IDENT","DB_ATTR_UNIQUE_ID","DB_ATTR_UNIQUE_IDENT","DB_TX_TIME_ID","DB_TX_TIME_IDENT","attribute","default","Attribute","Cardinality","Decimal","I64","InvalidValue","Many","One","Ref","Str","U64","ValueType","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cardinality","clone","clone","clone_into","clone_into","doc","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","ident","into","into","into","into","many","new","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unique","unique","value_type","with_doc","default_datoms","Error","Error","Iter","ReadStorage","Restricts","WriteStorage","attribute","attribute_resolver","borrow","borrow_mut","default","disk","entity","find","from","from","into","memory","new","save","serde","try_from","try_into","tx","type_id","value","with_attribute","with_entity","with_tx","with_value","Attribute","AttributeResolver","borrow","borrow","borrow_mut","borrow_mut","cardinality","clone","clone_into","default","eq","fmt","from","from","id","ident","into","into","new","resolve","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","value_type","DbError","DiskStorage","DiskStorageError","DiskStorageIter","ReadError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","find","fmt","fmt","from","from","from","from","from","into","into","into","into_iter","new","next","save","source","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","InMemoryStorage","InMemoryStorageIter","borrow","borrow","borrow_mut","borrow_mut","default","find","from","from","into","into","into_iter","new","next","save","try_from","try_from","try_into","try_into","type_id","type_id","Bytes","EndOfInput","InvalidInput","ReadError","Reader","Utf8Error","Writable","borrow","borrow","borrow_mut","borrow_mut","datom","fmt","fmt","from","from","from","index","into","into","new","size","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","write","deserialize","serialize","aevt","avet","eavt","TAG_AEVT","TAG_AVET","TAG_EAVT","key_range","seek_key","AttributeValue","DuplicateTempId","Entity","Id","IdentNotFound","InvalidAttributeType","New","Operation","StorageError","TempId","TempIdNotFound","Transaction","TransactionError","TransctionResult","attribute","attributes","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","entity","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","new","new","on_id","on_new","on_temp_id","operations","set","source","temp_ids","to_string","transactor","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","tx_data","tx_id","type_id","type_id","type_id","type_id","type_id","type_id","value","with","Transactor","borrow","borrow_mut","default","from","into","new","transact","try_from","try_into","type_id"],"q":[[0,"rustomic"],[6,"rustomic::clock"],[27,"rustomic::datom"],[106,"rustomic::query"],[150,"rustomic::query::assignment"],[171,"rustomic::query::clause"],[196,"rustomic::query::db"],[206,"rustomic::query::pattern"],[245,"rustomic::schema"],[259,"rustomic::schema::attribute"],[323,"rustomic::schema::default"],[324,"rustomic::storage"],[354,"rustomic::storage::attribute_resolver"],[382,"rustomic::storage::disk"],[419,"rustomic::storage::memory"],[441,"rustomic::storage::serde"],[472,"rustomic::storage::serde::datom"],[474,"rustomic::storage::serde::datom::serialize"],[477,"rustomic::storage::serde::index"],[482,"rustomic::tx"],[563,"rustomic::tx::transactor"]],"d":["","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator that yields all <em>non-retracted</em> datoms â€¦","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","",""],"i":[0,0,0,0,0,0,0,0,0,65,1,65,1,1,65,1,65,1,1,66,1,65,1,65,1,65,1,9,0,5,5,0,9,5,5,0,7,5,9,7,5,5,5,7,5,9,7,5,9,7,5,9,7,5,9,7,5,7,5,9,7,5,9,7,5,9,7,5,5,5,5,5,5,5,5,9,7,5,9,7,5,9,7,5,7,5,7,5,9,5,5,9,7,5,9,7,5,9,7,7,5,9,7,7,5,9,27,27,0,0,0,27,0,25,26,27,25,26,27,0,0,25,25,26,27,27,25,26,27,27,27,25,26,27,25,0,26,27,27,25,26,27,25,26,27,25,26,27,25,25,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,38,38,38,38,38,38,38,38,38,0,34,34,37,37,0,34,34,37,34,37,34,37,34,37,34,34,37,34,37,34,37,34,37,34,34,34,37,34,37,34,37,34,37,34,37,34,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,0,42,42,22,22,22,0,67,22,42,43,67,22,42,43,43,22,42,22,42,43,22,42,22,42,22,42,43,67,22,22,42,42,43,43,67,22,42,43,43,43,22,42,67,22,22,42,43,67,22,42,43,67,22,42,43,43,43,43,43,0,39,68,39,0,0,0,44,0,44,44,44,0,44,39,44,44,44,0,44,68,0,44,44,44,44,44,44,44,44,44,0,0,47,46,47,46,46,46,46,47,46,46,47,46,46,46,47,46,47,47,46,47,46,47,46,47,46,46,49,0,0,0,49,48,53,49,48,53,49,48,49,49,48,53,49,49,49,48,53,49,53,48,53,48,49,49,48,53,49,48,53,49,48,53,49,0,0,55,54,55,54,54,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,0,51,51,0,0,51,0,58,51,58,51,0,51,51,58,51,51,0,58,51,58,69,51,51,58,51,58,51,58,51,69,0,0,0,0,0,0,0,0,0,0,0,61,0,63,61,61,63,0,61,63,61,0,0,0,70,62,63,70,62,59,60,61,63,70,62,59,60,61,59,62,60,61,61,63,70,62,62,59,60,61,61,61,63,70,62,59,60,61,62,59,62,62,62,59,62,61,60,61,0,63,70,62,59,60,61,63,70,62,59,60,61,60,60,63,70,62,59,60,61,70,59,0,64,64,64,64,64,64,64,64,64,64],"f":[0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],1],[[]],[[]],[[]],[[]],[[],1],[[],2],[1,2],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],0,0,0,0,0,0,0,0,0,[[2,2,[6,[5]],2],7],[8,5],[8,9],[8,7],[5,[[11,[10]]]],[5,[[11,[[12,[10]]]]]],[5,[[11,[2]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[5,5],[9,9],[7,7],[[]],[[]],[[]],[[5,5],13],0,[[5,5],14],[[9,9],14],[[7,7],14],[[],14],[[],14],[[],14],[[5,15],16],[[9,15],16],[[7,15],16],[17,5],[18,5],[[]],[19,5],[10,5],[20,5],[2,5],[[[12,[10]]],5],[[]],[[]],[[5,21]],[[9,21]],[[7,21]],[[]],[[]],[[]],[[5,22],14],0,[[5,5],[[11,[13]]]],[[2,2,[6,[5]],2],7],[5,23],[9,23],[10,5],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,[[],4],[[],4],[[],4],0,[[5,24]],[[9,24]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],25],[[25,15],16],[[26,15],16],[[27,15],16],[[[27,[28]],15],16],[[]],[[]],[[],27],[29],[[]],[[]],[[]],[[]],[[],25],0,0,[[[27,[30]]],[[11,[30]]]],[[],31],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[],4],[[25,32],25],0,0,[[33,10,[6,[5]]]],0,[[33,34],[[11,[5]]]],[[]],[[]],[33,33],[[]],[[33,33],14],[[],14],[[33,15],16],[[]],[25,33],[[]],[33,14],[[[35,[[12,[10]]]]],33],[[]],[[],3],[[],3],[[],4],[[33,32,7],33],0,[[32,33],32],0,[[]],[[]],[32,32],[[]],[[],32],0,[[32,15],16],[32,[[36,[10]]]],[[]],[[]],[[],32],[[]],[[],3],[[],3],0,[[],4],0,[[32,[34,[37]]],32],[[32,[34,[2]]],32],[[32,[34,[2]]],32],[[32,[34,[2]]]],[[32,[34,[5]]],32],0,[[]],[[]],[[]],[[]],[2,38],[[38,39,25],[[3,[26,27]]]],[[],3],[[],3],[[],4],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[[34,[40]]],[[34,[40]]]],[37,37],[[]],[[]],[[],34],[[[34,[41]],[34,[41]]],14],[[37,37],14],[[],14],[[],14],[[[34,[28]],15],16],[[37,15],16],[[]],[[]],[2,[[34,[37]]]],[10,[[34,[37]]]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[[6,[5]]],[[34,[5]]]],[10,34],[34,[[11,[10]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[22,22],[42,42],[[]],[[]],0,[[22,22],14],[[42,42],14],[[],14],[[],14],[[22,15],16],[[42,15],16],[[43,15],16],[[]],[[]],[2,[[11,[22]]]],[2,[[11,[42]]]],[[]],[[]],0,[[]],[[]],[[]],[[]],[43,43],[[10,22],43],[[]],[[]],[[],3],[[],3],[2,[[3,[22]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[],4],[[],4],[43,43],0,0,[[43,10],43],[[],[[36,[7]]]],0,0,0,0,0,0,0,0,[[]],[[]],[[],44],0,0,[44],[[]],[32,44],[[]],0,[[],44],[[[45,[7]]],3],0,[[],3],[[],3],0,[[],4],0,[[44,2],44],[[44,2],44],[[44,2],44],[[44,5],44],0,0,[[]],[[]],[[]],[[]],0,[46,46],[[]],[[],47],[[46,46],14],[[46,15],16],[[]],[[]],0,0,[[]],[[]],[[],47],[[47,39,10],[[3,[[11,[46]]]]]],[[]],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[48,44]],[[49,15],16],[[49,15],16],[[]],[[]],[[]],[50,49],[51,49],[[]],[[]],[[]],[[]],[52,48],[53,11],[[48,[45,[7]]],3],[49,[[11,[30]]]],[[],31],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[],4],0,0,[[]],[[]],[[]],[[]],[[],54],[[54,44]],[[]],[[]],[[]],[[]],[[]],[[],54],[55,11],[[54,[45,[7]]],3],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,[[51,15],16],[[51,15],16],[[]],[56,51],[[]],0,[[]],[[]],[[[45,[57]]],58],[[],23],[51,[[11,[30]]]],[[],31],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[24],[[[45,[57]]],[[3,[7,51]]]],0,[7,24],[7,24],[7,24],0,0,0,[44],[[7,[45,[57]]],24],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],59],0,[[60,15],16],[[[61,[28]],15],16],[[61,15],16],[[]],[[]],[43,62],[[]],[[]],[[]],[29],[[]],[[],61],[[]],[[]],[[]],[[]],[[]],[[]],[63,62],[[],59],[2,62],[[],62],[10,62],0,[[62,10,[6,[5]]],62],[[[61,[30]]],[[11,[30]]]],0,[[],31],0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,[[59,[6,[62]]],59],0,[[]],[[]],[[],64],[[]],[[]],[[],64],[[64,39,65,59],[[3,[60,61]]]],[[],3],[[],3],[[],4]],"c":[],"p":[[3,"MockClock"],[15,"u64"],[4,"Result"],[3,"TypeId"],[4,"Value"],[8,"Into"],[3,"Datom"],[3,"Gen"],[4,"Op"],[15,"str"],[4,"Option"],[3,"Rc"],[4,"Ordering"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"i32"],[15,"u32"],[3,"Decimal"],[15,"i64"],[8,"Hasher"],[4,"ValueType"],[15,"usize"],[6,"Bytes"],[3,"Query"],[3,"QueryResult"],[4,"QueryError"],[8,"Debug"],[15,"never"],[8,"Error"],[3,"String"],[3,"Clause"],[3,"Assignment"],[4,"Pattern"],[3,"HashSet"],[3,"Vec"],[4,"AttributeIdentifier"],[3,"Db"],[8,"ReadStorage"],[8,"Clone"],[8,"PartialEq"],[4,"Cardinality"],[3,"Attribute"],[3,"Restricts"],[15,"slice"],[3,"Attribute"],[3,"AttributeResolver"],[3,"DiskStorage"],[4,"DiskStorageError"],[3,"Error"],[4,"ReadError"],[6,"DB"],[3,"DiskStorageIter"],[3,"InMemoryStorage"],[3,"InMemoryStorageIter"],[3,"Utf8Error"],[15,"u8"],[3,"Reader"],[3,"Transaction"],[3,"TransctionResult"],[4,"TransactionError"],[3,"Operation"],[4,"Entity"],[3,"Transactor"],[3,"Instant"],[8,"Clock"],[3,"InvalidValue"],[8,"WriteStorage"],[8,"Writable"],[3,"AttributeValue"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
